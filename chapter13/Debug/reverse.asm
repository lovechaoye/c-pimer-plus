; Listing generated by Microsoft (R) Optimizing Compiler Version 19.25.28614.0 

	TITLE	C:\Users\Administrator\source\repos\chapter13\reverse.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__DF10375E_reverse@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_scanf_options
PUBLIC	__vfscanf_l
PUBLIC	_scanf
PUBLIC	_mssssain
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0CM@PGNFKPFD@Enter?5the?5name?5of?5the?5file?5to?5b@ ; `string'
PUBLIC	??_C@_04CFBKLHHN@?$CF80s@			; `string'
PUBLIC	??_C@_02JDPG@rb@				; `string'
PUBLIC	??_C@_0BA@FKNGFNEK@Can?8t?5open?5file@		; `string'
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fseek:PROC
EXTRN	__imp__ftell:PROC
EXTRN	__imp__getc:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__putchar:PROC
EXTRN	__imp__puts:PROC
EXTRN	__imp____stdio_common_vfscanf:PROC
EXTRN	__imp__exit:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9:QWORD							; `__local_stdio_scanf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BA@FKNGFNEK@Can?8t?5open?5file@
CONST	SEGMENT
??_C@_0BA@FKNGFNEK@Can?8t?5open?5file@ DB 'Can''t open file', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_02JDPG@rb@
CONST	SEGMENT
??_C@_02JDPG@rb@ DB 'rb', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04CFBKLHHN@?$CF80s@
CONST	SEGMENT
??_C@_04CFBKLHHN@?$CF80s@ DB '%80s', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@PGNFKPFD@Enter?5the?5name?5of?5the?5file?5to?5b@
CONST	SEGMENT
??_C@_0CM@PGNFKPFD@Enter?5the?5name?5of?5the?5file?5to?5b@ DB 'Enter the '
	DB	'name of the file to be processed:', 00H	; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Administrator\source\repos\chapter13\reverse.c
;	COMDAT _mssssain
_TEXT	SEGMENT
_last$ = -140						; size = 4
_count$ = -128						; size = 4
_fp$ = -116						; size = 4
_ch$ = -101						; size = 1
_file$ = -92						; size = 81
__$ArrayPad$ = -4					; size = 4
_mssssain PROC						; COMDAT

; 7    : int mssssain(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 336				; 00000150H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-336]
	mov	ecx, 84					; 00000054H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __DF10375E_reverse@c
	call	@__CheckForDebuggerJustMyCode@4

; 8    :     char file[SLEN];
; 9    :     char ch;
; 10   :     FILE* fp;
; 11   :     long count, last;
; 12   : 
; 13   :     puts("Enter the name of the file to be processed:");

	mov	esi, esp
	push	OFFSET ??_C@_0CM@PGNFKPFD@Enter?5the?5name?5of?5the?5file?5to?5b@
	call	DWORD PTR __imp__puts
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 14   :     scanf("%80s", file);

	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	push	OFFSET ??_C@_04CFBKLHHN@?$CF80s@
	call	_scanf
	add	esp, 8

; 15   :     if ((fp = fopen(file, "rb")) == NULL) {

	mov	esi, esp
	push	OFFSET ??_C@_02JDPG@rb@
	lea	eax, DWORD PTR _file$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fp$[ebp], eax
	cmp	DWORD PTR _fp$[ebp], 0
	jne	SHORT $LN5@mssssain

; 16   :         perror("Can't open file");

	mov	esi, esp
	push	OFFSET ??_C@_0BA@FKNGFNEK@Can?8t?5open?5file@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 17   :         exit(EXIT_FAILURE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@mssssain:

; 18   :     }
; 19   :     fseek(fp,0L,SEEK_END);

	mov	esi, esp
	push	2
	push	0
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 20   :     last = ftell(fp);

	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__ftell
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _last$[ebp], eax

; 21   :     for (count  = 1;  count <= last; count++)

	mov	DWORD PTR _count$[ebp], 1
	jmp	SHORT $LN4@mssssain
$LN2@mssssain:
	mov	eax, DWORD PTR _count$[ebp]
	add	eax, 1
	mov	DWORD PTR _count$[ebp], eax
$LN4@mssssain:
	mov	eax, DWORD PTR _count$[ebp]
	cmp	eax, DWORD PTR _last$[ebp]
	jg	SHORT $LN3@mssssain

; 22   :     {
; 23   :         fseek(fp, -count,SEEK_END);

	mov	esi, esp
	push	2
	mov	eax, DWORD PTR _count$[ebp]
	neg	eax
	push	eax
	mov	ecx, DWORD PTR _fp$[ebp]
	push	ecx
	call	DWORD PTR __imp__fseek
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 24   :         ch = getc(fp);

	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__getc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	BYTE PTR _ch$[ebp], al

; 25   :         if (ch != CNTL_Z && ch != '\r') /* MS-DOSÎÄ¼þ */

	movsx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 26					; 0000001aH
	je	SHORT $LN6@mssssain
	movsx	eax, BYTE PTR _ch$[ebp]
	cmp	eax, 13					; 0000000dH
	je	SHORT $LN6@mssssain

; 26   :         {
; 27   :             putchar(ch);

	movsx	eax, BYTE PTR _ch$[ebp]
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN6@mssssain:

; 28   :         }
; 29   :     }

	jmp	SHORT $LN2@mssssain
$LN3@mssssain:

; 30   :     putchar('\n');

	mov	esi, esp
	push	10					; 0000000aH
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 31   :     fclose(fp);

	mov	esi, esp
	mov	eax, DWORD PTR _fp$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 32   : 
; 33   :     return 0;

	xor	eax, eax
$LN7@mssssain:

; 34   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN10@mssssain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 336				; 00000150H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN10@mssssain:
	DD	1
	DD	$LN9@mssssain
$LN9@mssssain:
	DD	-92					; ffffffa4H
	DD	81					; 00000051H
	DD	$LN8@mssssain
$LN8@mssssain:
	DB	102					; 00000066H
	DB	105					; 00000069H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	0
_mssssain ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _scanf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_scanf	PROC						; COMDAT

; 1280 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 1281 :         int _Result;
; 1282 :         va_list _ArgList;
; 1283 :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 1284 :         _Result = _vfscanf_l(stdin, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	esi, esp
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	__vfscanf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 1285 :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 1286 :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 1287 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_scanf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfscanf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfscanf_l PROC					; COMDAT

; 1062 :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 1063 :         return __stdio_common_vfscanf(

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_scanf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfscanf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 1064 :             _CRT_INTERNAL_LOCAL_SCANF_OPTIONS,
; 1065 :             _Stream, _Format, _Locale, _ArgList);
; 1066 :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfscanf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_scanf_options
_TEXT	SEGMENT
___local_stdio_scanf_options PROC			; COMDAT

; 96   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 97   :         static unsigned __int64 _OptionsStorage;
; 98   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_scanf_options@@9@9 ; `__local_stdio_scanf_options'::`2'::_OptionsStorage

; 99   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_scanf_options ENDP
_TEXT	ENDS
END
