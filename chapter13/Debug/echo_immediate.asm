; Listing generated by Microsoft (R) Optimizing Compiler Version 19.25.28614.0 

	TITLE	C:\Users\Administrator\source\repos\chapter13\echo_immediate.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__A3DDD9DE_echo_immediate@c DB 01H
msvcjmc	ENDS
PUBLIC	_wwwmain
PUBLIC	__JustMyCode_Default
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__getchar:PROC
EXTRN	__imp__putchar:PROC
EXTRN	__imp__setvbuf:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Administrator\source\repos\chapter13\echo_immediate.c
;	COMDAT _wwwmain
_TEXT	SEGMENT
_ch$ = -8						; size = 4
_wwwmain PROC						; COMDAT

; 5    : int wwwmain(void) {

	push	ebp
	mov	ebp, esp
	sub	esp, 224				; 000000e0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-224]
	mov	ecx, 56					; 00000038H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __A3DDD9DE_echo_immediate@c
	call	@__CheckForDebuggerJustMyCode@4

; 6    :     int ch;
; 7    : 				char buf[SIZE];
; 8    : 				setvbuf(stdin, NULL , _IONBF, 0);

	mov	esi, esp
	push	0
	push	4
	push	0
	mov	edi, esp
	push	0
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	edi, esp
	call	__RTC_CheckEsp
	push	eax
	call	DWORD PTR __imp__setvbuf
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@wwwmain:

; 9    : 				while ((ch = getchar())!= EOF)

	mov	esi, esp
	call	DWORD PTR __imp__getchar
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$[ebp], eax
	cmp	DWORD PTR _ch$[ebp], -1
	je	SHORT $LN3@wwwmain

; 10   : 				{
; 11   : 								putchar(ch);

	mov	esi, esp
	mov	eax, DWORD PTR _ch$[ebp]
	push	eax
	call	DWORD PTR __imp__putchar
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 12   : 				}

	jmp	SHORT $LN2@wwwmain
$LN3@wwwmain:

; 13   : 
; 14   : 				return 0;

	xor	eax, eax

; 15   : 
; 16   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@wwwmain
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 224				; 000000e0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN7@wwwmain:
	DD	1
	DD	$LN6@wwwmain
$LN6@wwwmain:
	DD	-28					; ffffffe4H
	DD	10					; 0000000aH
	DD	$LN5@wwwmain
$LN5@wwwmain:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	0
_wwwmain ENDP
_TEXT	ENDS
END
