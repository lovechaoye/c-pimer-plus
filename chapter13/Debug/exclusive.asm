; Listing generated by Microsoft (R) Optimizing Compiler Version 19.25.28614.0 

	TITLE	C:\Users\Administrator\source\repos\chapter13\exclusive.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__E5DF7C7E_exclusive@c DB 01H
msvcjmc	ENDS
PUBLIC	_m1ain
PUBLIC	__JustMyCode_Default
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__exit:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Administrator\source\repos\chapter13\exclusive.c
;	COMDAT _m1ain
_TEXT	SEGMENT
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_m1ain	PROC						; COMDAT

; 5    : int m1ain(int argc,char * argv[]) {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __E5DF7C7E_exclusive@c
	call	@__CheckForDebuggerJustMyCode@4

; 6    : 				if (fclose(stderr)) {

	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	esi, esp
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN2@m1ain

; 7    : 								perror(NULL);

	mov	esi, esp
	push	0
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 8    : 								exit(EXIT_FAILURE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@m1ain:

; 9    : 				}
; 10   :     //FILE* fp;
; 11   : 				//if (argc != 2)
; 12   : 				//{
; 13   : 				//				printf("please input filename\n");
; 14   : 				//				exit(EXIT_FAILURE);
; 15   : 				//}
; 16   : 				//if ((fp = fopen(argv[1],"wbx")) == NULL)
; 17   : 				//{
; 18   : 				//				perror("file open failed");
; 19   : 				//				exit(EXIT_FAILURE);
; 20   : 				//}
; 21   : 				//getchar();
; 22   : 				//fclose(fp);
; 23   : 				//printf("file closed!\n");
; 24   : 				return 0;

	xor	eax, eax
$LN3@m1ain:

; 25   : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_m1ain	ENDP
_TEXT	ENDS
END
