; Listing generated by Microsoft (R) Optimizing Compiler Version 19.25.28614.0 

	TITLE	C:\Users\Administrator\source\repos\chapter13\reduceto.c
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__F66CEB67_corecrt_stdio_config@h DB 01H
__101834BA_corecrt_wstdio@h DB 01H
__AD6A91B7_stdio@h DB 01H
__367CC694_corecrt_memcpy_s@h DB 01H
__DC9673E3_corecrt_wstring@h DB 01H
__A29A7DFB_string@h DB 01H
__FAF7A3E7_reduceto@c DB 01H
msvcjmc	ENDS
PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	_fprintf
PUBLIC	_mai22n
PUBLIC	__JustMyCode_Default
PUBLIC	??_C@_0BE@EJMFHGLI@Usage?3?5?$CFs?5filename?6@	; `string'
PUBLIC	??_C@_01KDCPPGHE@r@				; `string'
PUBLIC	??_C@_0BJ@HJHMNKPH@I?5couldn?8t?5open?5the?5file@ ; `string'
PUBLIC	??_C@_04MJJHFGPI@?4red@				; `string'
PUBLIC	??_C@_01NOFIACDB@w@				; `string'
PUBLIC	??_C@_0BJ@ONLLFIED@Can?8t?5create?5output?5file@ ; `string'
PUBLIC	??_C@_0BH@BPHFLAEL@Error?5in?5closing?5files@	; `string'
EXTRN	___report_rangecheckfailure:PROC
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fgetc:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__perror:PROC
EXTRN	__imp__putc:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	__imp__exit:PROC
EXTRN	_strcat:PROC
EXTRN	__imp__strncpy:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___security_cookie:DWORD
_DATA	SEGMENT
COMM	?_OptionsStorage@?1??__local_stdio_printf_options@@9@9:QWORD							; `__local_stdio_printf_options'::`2'::_OptionsStorage
_DATA	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_0BH@BPHFLAEL@Error?5in?5closing?5files@
CONST	SEGMENT
??_C@_0BH@BPHFLAEL@Error?5in?5closing?5files@ DB 'Error in closing files', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@ONLLFIED@Can?8t?5create?5output?5file@
CONST	SEGMENT
??_C@_0BJ@ONLLFIED@Can?8t?5create?5output?5file@ DB 'Can''t create output'
	DB	' file', 00H					; `string'
CONST	ENDS
;	COMDAT ??_C@_01NOFIACDB@w@
CONST	SEGMENT
??_C@_01NOFIACDB@w@ DB 'w', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_04MJJHFGPI@?4red@
CONST	SEGMENT
??_C@_04MJJHFGPI@?4red@ DB '.red', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0BJ@HJHMNKPH@I?5couldn?8t?5open?5the?5file@
CONST	SEGMENT
??_C@_0BJ@HJHMNKPH@I?5couldn?8t?5open?5the?5file@ DB 'I couldn''t open th'
	DB	'e file', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_01KDCPPGHE@r@
CONST	SEGMENT
??_C@_01KDCPPGHE@r@ DB 'r', 00H				; `string'
CONST	ENDS
;	COMDAT ??_C@_0BE@EJMFHGLI@Usage?3?5?$CFs?5filename?6@
CONST	SEGMENT
??_C@_0BE@EJMFHGLI@Usage?3?5?$CFs?5filename?6@ DB 'Usage: %s filename', 0aH
	DB	00H						; `string'
CONST	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Users\Administrator\source\repos\chapter13\reduceto.c
;	COMDAT _mai22n
_TEXT	SEGMENT
tv136 = -312						; size = 4
tv135 = -308						; size = 4
$T1 = -300						; size = 4
_count$ = -96						; size = 4
_name$ = -84						; size = 40
_ch$ = -36						; size = 4
_out$ = -24						; size = 4
_in$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_argc$ = 8						; size = 4
_argv$ = 12						; size = 4
_mai22n	PROC						; COMDAT

; 8    : int mai22n(int argc, char* argv[]) {

	push	ebp
	mov	ebp, esp
	sub	esp, 312				; 00000138H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-312]
	mov	ecx, 78					; 0000004eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	mov	ecx, OFFSET __FAF7A3E7_reduceto@c
	call	@__CheckForDebuggerJustMyCode@4

; 9    :     FILE* in, * out;  //声明指向FILE的指针
; 10   :     int ch; //用int类型的变量存储EOF
; 11   :     char name[LEN]; //储存输出的文件名
; 12   :     int count = 0;

	mov	DWORD PTR _count$[ebp], 0

; 13   : 
; 14   :     //检查命令行参数
; 15   :     if (argc < 2)

	cmp	DWORD PTR _argc$[ebp], 2
	jge	SHORT $LN4@mai22n

; 16   :     {
; 17   :         fprintf(stderr,"Usage: %s filename\n", argv[0]);

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _argv$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	push	eax
	push	OFFSET ??_C@_0BE@EJMFHGLI@Usage?3?5?$CFs?5filename?6@
	mov	esi, esp
	push	2
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	_fprintf
	add	esp, 12					; 0000000cH

; 18   :         exit(EXIT_FAILURE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@mai22n:

; 19   :     }
; 20   : 
; 21   :     //设置输入
; 22   :     if ((in = fopen(argv[1],"r")) == NULL)

	mov	esi, esp
	push	OFFSET ??_C@_01KDCPPGHE@r@
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _in$[ebp], eax
	cmp	DWORD PTR _in$[ebp], 0
	jne	SHORT $LN5@mai22n

; 23   :     {
; 24   :         perror("I couldn't open the file");

	mov	esi, esp
	push	OFFSET ??_C@_0BJ@HJHMNKPH@I?5couldn?8t?5open?5the?5file@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 25   :         exit(EXIT_FAILURE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@mai22n:

; 26   :     }
; 27   : 
; 28   :     //设置输入
; 29   :     strncpy(name,argv[1],LEN - 5); //拷贝文件名

	mov	esi, esp
	push	35					; 00000023H
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _argv$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	push	edx
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__strncpy
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp

; 30   :     name[LEN - 5] = '\0';

	mov	eax, 1
	imul	ecx, eax, 35
	mov	DWORD PTR $T1[ebp], ecx
	cmp	DWORD PTR $T1[ebp], 40			; 00000028H
	jae	SHORT $LN11@mai22n
	jmp	SHORT $LN12@mai22n
$LN11@mai22n:
	call	___report_rangecheckfailure
$LN12@mai22n:
	mov	edx, DWORD PTR $T1[ebp]
	mov	BYTE PTR _name$[ebp+edx], 0

; 31   :     strcat(name,".red");  //在文件名后添加.red

	push	OFFSET ??_C@_04MJJHFGPI@?4red@
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	_strcat
	add	esp, 8

; 32   :     if ((out = fopen(name,"w")) == NULL)

	mov	esi, esp
	push	OFFSET ??_C@_01NOFIACDB@w@
	lea	eax, DWORD PTR _name$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _out$[ebp], eax
	cmp	DWORD PTR _out$[ebp], 0
	jne	SHORT $LN2@mai22n

; 33   :     {
; 34   :         perror("Can't create output file");

	mov	esi, esp
	push	OFFSET ??_C@_0BJ@ONLLFIED@Can?8t?5create?5output?5file@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp

; 35   :         exit(EXIT_FAILURE);

	mov	esi, esp
	push	1
	call	DWORD PTR __imp__exit
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@mai22n:

; 36   :     }
; 37   :     //拷贝数据
; 38   :     while ((ch = fgetc(in)) != EOF)

	mov	esi, esp
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	DWORD PTR __imp__fgetc
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _ch$[ebp], eax
	cmp	DWORD PTR _ch$[ebp], -1
	je	SHORT $LN3@mai22n

; 39   :     {
; 40   :         if (count++ % 3 == 0)

	mov	eax, DWORD PTR _count$[ebp]
	cdq
	mov	ecx, 3
	idiv	ecx
	mov	DWORD PTR tv135[ebp], edx
	mov	edx, DWORD PTR _count$[ebp]
	add	edx, 1
	mov	DWORD PTR _count$[ebp], edx
	cmp	DWORD PTR tv135[ebp], 0
	jne	SHORT $LN13@mai22n
	mov	DWORD PTR tv136[ebp], 1
	jmp	SHORT $LN14@mai22n
$LN13@mai22n:
	mov	DWORD PTR tv136[ebp], 0
$LN14@mai22n:
	cmp	DWORD PTR tv136[ebp], 0
	je	SHORT $LN7@mai22n

; 41   :         {
; 42   :             putc(ch,out);

	mov	esi, esp
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ch$[ebp]
	push	ecx
	call	DWORD PTR __imp__putc
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN7@mai22n:

; 43   :         }
; 44   :     }

	jmp	SHORT $LN2@mai22n
$LN3@mai22n:

; 45   :     if (fclose(in) != 0 || fclose(out) != 0)

	mov	esi, esp
	mov	eax, DWORD PTR _in$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	jne	SHORT $LN9@mai22n
	mov	esi, esp
	mov	eax, DWORD PTR _out$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	test	eax, eax
	je	SHORT $LN8@mai22n
$LN9@mai22n:

; 46   :     {
; 47   :         perror("Error in closing files");

	mov	esi, esp
	push	OFFSET ??_C@_0BH@BPHFLAEL@Error?5in?5closing?5files@
	call	DWORD PTR __imp__perror
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN8@mai22n:

; 48   :     }
; 49   : 
; 50   :     return 0;

	xor	eax, eax
$LN10@mai22n:

; 51   : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@mai22n
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 312				; 00000138H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN17@mai22n:
	DD	1
	DD	$LN16@mai22n
$LN16@mai22n:
	DD	-84					; ffffffacH
	DD	40					; 00000028H
	DD	$LN15@mai22n
$LN15@mai22n:
	DB	110					; 0000006eH
	DB	97					; 00000061H
	DB	109					; 0000006dH
	DB	101					; 00000065H
	DB	0
_mai22n	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT _fprintf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
_fprintf PROC						; COMDAT

; 835  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 836  :         int _Result;
; 837  :         va_list _ArgList;
; 838  :         __crt_va_start(_ArgList, _Format);

	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 839  :         _Result = _vfprintf_l(_Stream, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Stream$[ebp]
	push	edx
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 840  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 841  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 842  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_fprintf ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 642  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __AD6A91B7_stdio@h
	call	@__CheckForDebuggerJustMyCode@4

; 643  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 644  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File C:\Program Files (x86)\Windows Kits\10\Include\10.0.18362.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 86   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET __F66CEB67_corecrt_stdio_config@h
	call	@__CheckForDebuggerJustMyCode@4

; 87   :         static unsigned __int64 _OptionsStorage;
; 88   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@9 ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 89   :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
